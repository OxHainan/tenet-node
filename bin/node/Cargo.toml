[package]
name = "tenet-node"
version = "1.0.0-dev"
license = "Unlicense"
build = "build.rs"
description = "A fresh FRAME-based Substrate node, ready for hacking."
publish = false
authors = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }

[[bin]]
name = "tenet-node"
path = "bin/main.rs"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
async-trait = { workspace = true }
clap = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true }
jsonrpsee = { workspace = true, features = ["server", "macros"] }
log = { workspace = true }
scale-codec = { workspace = true }
serde = { workspace = true }
tc-executor = { workspace = true }
hex = { workspace = true }
# Substrate
prometheus-endpoint = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-consensus-grandpa = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sc-executor = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-offchain = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true, features = ["default"] }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus-aura = { workspace = true, features = ["default"] }
sp-consensus-grandpa = { workspace = true, features = ["default"] }
sp-core = { workspace = true, features = ["default"] }
sp-inherents = { workspace = true, features = ["default"] }
sp-runtime = { workspace = true, features = ["default"] }
sp-session = { workspace = true, features = ["default"] }
sp-state-machine = { workspace = true, features = ["default"] }
sp-timestamp = { workspace = true, features = ["default"] }
sp-transaction-pool = { workspace = true, features = ["default"] }
# These dependencies are used for RPC
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
substrate-frame-rpc-system = { workspace = true }

frame-system = { workspace = true }
pallet-transaction-payment = { workspace = true }

# Frontier
fc-api = { workspace = true }
fp-dynamic-fee = { workspace = true, features = ["default"] }
fp-evm = { workspace = true, features = ["default"] }

# Tenet
tc-cli = { workspace = true }
tc-consensus = { workspace = true }
tc-db = { workspace = true }
tc-mapping-sync = { workspace = true }
tc-rpc = { workspace = true }
tc-rpc-core = { workspace = true }
tc-storage = { workspace = true }
tenet-runtime = { workspace = true, features = ["std"] }
tp-rpc = { workspace = true, features = ["default"] }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[features]
default = ["with-rocksdb-weights", "rocksdb", "txpool"]
rocksdb = [
	"sc-cli/rocksdb",
	"sc-service/rocksdb",
	"tc-cli/rocksdb",
	"tc-db/rocksdb",
	"tc-mapping-sync/rocksdb",
]
sql = ["tc-db/sql", "tc-mapping-sync/sql"]
with-rocksdb-weights = ["tenet-runtime/with-rocksdb-weights"]
with-paritydb-weights = ["tenet-runtime/with-paritydb-weights"]
txpool = ["tc-rpc/txpool"]
rpc-binary-search-estimate = ["tc-rpc/rpc-binary-search-estimate"]
